AJS.test.require(["jira.webresources:jira-global","jira.webresources:select-pickers","com.atlassian.auiplugin:ajs-underscorejs-amd-shim"],function(){"use strict";var e=require("jquery"),t=require("underscore"),i=require("jira/ajs/select/checkbox-multi-select");module("CheckboxMultiSelect",{setup:function(){function s(t){return t?e("#searcher-pid-suggestions").find(t).find("li.check-list-item"):e("#searcher-pid-suggestions li.check-list-item")}function n(e,t){return s(t).filter(":contains("+e+")")}function o(){return e("#searcher-pid-suggestions li.no-suggestions")}function l(e){return c.find("option:contains("+e+")")}function r(){return u.getQueryVal()}function a(t){var i={38:"Up",40:"Down",13:"Return",8:"Backspace"},s="string"==typeof t;s||(t=i[t]);var n=new e.Event("aui:keydown");n.key=t,u.$field.trigger(n),(s||"Backspace"===t)&&(n=new e.Event("aui:keypress"),n.key=t,u.$field.trigger(n)),s&&u.$field.val(u.$field.val()+t),"Backspace"===t&&u.$field.val(u.$field.val().substring(0,u.$field.val().length-1)),u.$field.trigger("keyup")}e.fn.tipsy=function(){};var c=e('<select class="select" data-placeholder-text="Find Projects..." id="searcher-pid" multiple="multiple" name="pid" size="5" style="display: none; ">\n    <optgroup label="All Projects">\n        <option selected="selected" data-icon="/jira/secure/projectavatar?pid=10021&amp;size=small" title="Billabong" value="10021">Billabong</option>\n        <option selected="selected" data-icon="/jira/secure/projectavatar?pid=10020&amp;size=small" title="Hurley" value="10020">Hurley</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10023&amp;size=small" title="Insight" value="10023">Insight</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10026&amp;size=small" title="Nike 6.0" value="10026">Nike 6.0</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10022&amp;size=small" title="Quiksilver" value="10022">Quiksilver</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10028&amp;size=small" title="Ripcurl" value="10028">Ripcurl</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10025&amp;size=small" title="Stussy" value="10025">Stussy</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10027&amp;size=small" title="Surfrider Foundation" value="10027">Surfrider Foundation</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10024&amp;size=small" title="Volcom" value="10024">Volcom</option>\n        <option data-icon="/jira/secure/projectavatar?pid=10024&amp;size=small" title="Volcom" value="10088">Volly</option>\n    </optgroup>\n</select>').appendTo("body"),u=new i({element:c,stallEventBind:!1});this.control=u,this.tester={type:function(e){return u.$field.focus().val(e).trigger("input"),this},down:function(){return u.$field.focus(),a(40),this},up:function(){return u.$field.focus(),a(38),this},accept:function(){return u.$field.focus(),a(13),this},clear:function(){return this.type("")},selectByText:function(e){n(e).find("input").trigger("change")},clearSelection:function(){c.trigger("clear")},clearQueryField:function(){u.$dropDownIcon.click()}},this.GROUPS={selectedProjects:".selected-group"},this.assert={noneSelected:function(){equal(s().find(":checked").length,0,"No suggestion is checked"),equal(c.val(),null,"<select> has empty value")},selected:function(){var e=[];t.each(arguments,function(t){var i=n(t);i.length&&ok(1===i.find(":checked").length,'Expected suggestion "'+t+'" to be checked');var s=l(t);ok(s.is(":selected"),'Expected option "'+t+'" to be selected in <select>'),e.push(s.val())}),equal(JSON.stringify(c.val()),JSON.stringify(e))},selectedInGroup:function(e,i){var s=[];t.each(i,function(t){var i=n(t,e);i.length&&ok(1===i.find(":checked").length,'Expected suggestion "'+t+'" to be checked');var o=l(t);ok(o.is(":selected"),'Expected option "'+t+'" to be selected in <select>'),s.push(o.val())}),equal(JSON.stringify(c.val()),JSON.stringify(s))},suggestions:function(){equal(s().length,arguments.length,"Expected "+arguments.length+" suggestions present"),t.each(arguments,function(e){ok(1===n(e).length,'Expected suggestion "'+e+'" to be present')})},noSuggestions:function(){equal(s().length,0,"Expected no suggestions to be present"),equal(o().length,1,"Expected the 'No Matches' hint to be present")},bolded:function(){var i=s().find("em");equal(i.length,arguments.length,"Expected "+arguments.length+" to be bolded"),t.each(arguments,function(t,s){equal(e.trim(i.eq(s).text()),t,"Expected text ["+t+"] to be bolded")})},allSuggestions:function(){this.suggestions("Billabong","Hurley","Quiksilver","Insight","Nike 6.0","Ripcurl","Stussy","Surfrider Foundation","Volcom","Volly")},clearQueryIcon:function(e){equal(!!r(),e,"Expected clear query icon to be visible when the query field has text in it")},emptyQueryField:function(){ok(!r(),"Expected query field to be empty")}}},teardown:function(){e("#searcher-pid-multi-select").remove(),e("#searcher-pid").remove()}}),test("correct init state",function(){this.assert.selectedInGroup(this.GROUPS.selectedProjects,["Billabong","Hurley"]),this.assert.allSuggestions()}),test("selecting/unselecting options",function(){this.tester.down().accept().down().accept(),this.assert.selected("Billabong","Insight"),this.tester.accept().down().accept().down().accept(),this.assert.selected("Billabong","Nike 6.0","Quiksilver")}),test("Querying",function(){this.tester.type("vol"),this.assert.suggestions("Volcom","Volly"),this.assert.bolded("Vol","Vol"),this.tester.type("xxx"),this.assert.noSuggestions(),this.assert.bolded(),this.tester.clear(),this.assert.allSuggestions(),this.assert.bolded()}),test("Selecting other than highlighted selects only selected",function(){this.tester.down().down().down(),this.tester.selectByText("Insight"),this.assert.selected("Billabong","Hurley","Insight")}),test("Selected group is restored when no input value",function(){this.tester.type("blah").clear(),this.assert.selectedInGroup(this.GROUPS.selectedProjects,["Billabong","Hurley"])}),test("Clearing all selections",function(){this.tester.clearSelection(),this.assert.noneSelected()}),test("Clicking clear query icon when there is text removes all text",function(){this.assert.clearQueryIcon(!1),this.tester.type("vol"),this.assert.clearQueryIcon(!0),this.tester.clearQueryField(),this.assert.clearQueryIcon(!1),this.assert.emptyQueryField()}),test("Selecting item updates aria-activedescendant attribute correctly.",function(){var e=sinon.useFakeTimers();this.tester.down(),e.tick(50),ok(this.control.$field.attr("aria-activedescendant").startsWith("10020"),"Aria-activedescendant points to the correct field.")})});