AJS.test.require(["jira.webresources:manageshared"],function(){var t=require("jquery"),a="/jira/secure/ConfigurePortalPages!default.jspa?view=my";module("TabManager",{setup:function(){this.sandbox=sinon.sandbox.create({useFakeServer:!0}),t("#qunit-fixture").html('<ul class="vertical tabs"><li class="active first-tab"><a href="/jira/secure/ConfigurePortalPages!default.jspa?view=favourites">Favourites</a></li><li class="second-tab"><a href="/jira/secure/ConfigurePortalPages!default.jspa?view=my">My filters</a></li></ul>')},tearDown:function(){this.sandbox.restore()},getMockableContext:function(){return this.mockableContext||(this.mockableContext=AJS.test.mockableModuleContext()),this.mockableContext},prepareTabManagerUtilStub:function(){this.utilMock=this.sandbox.stub(),this.utilMock.prototype.constructCompleteUrl=this.sandbox.stub().returns("fake/url"),this.utilMock.prototype.getTabParamFromUrl=this.sandbox.stub().returns({param:"fake"}),this.utilMock.prototype.getTabParamFromUrl.withArgs(a).returns({param:"fake2"}),this.utilMock.prototype.updateInitialUrl=this.sandbox.stub(),this.utilMock.prototype.replaceHistoryItem=this.sandbox.stub(),this.utilMock.prototype.saveHistoryItem=this.sandbox.stub(),this.getMockableContext().mock("jira/tabs/tab-manager/util",this.utilMock)},initializeTabManager:function(){this.tabManager=this.getMockableContext().require("jira/tabs/tab-manager"),this.tabManager.navigationTabs.init({})}}),test("navigateToTab() should call tabManagerUtil.saveHistoryItem() if not handling history event",function(){this.prepareTabManagerUtilStub(),this.initializeTabManager();var a=this.tabManager.navigationTabs._getNavigateToTabFunc(),e=t(".second-tab");a(e,!1,e.find("a").attr("href")),this.sandbox.server.requests[0].respond(200,{"Content-Type":"text/html"},""),sinon.assert.calledOnce(this.tabManager.navigationTabs._getTabManagerUtil().saveHistoryItem)}),test("navigateToTab() shouldn't call tabManagerUtil.saveHistoryItem() if handling history event",function(){this.prepareTabManagerUtilStub(),this.initializeTabManager();var a=this.tabManager.navigationTabs._getNavigateToTabFunc(),e=t(".second-tab");a(e,!0,e.find("a").attr("href")),this.sandbox.server.requests[0].respond(200,{"Content-Type":"text/html"},""),sinon.assert.notCalled(this.tabManager.navigationTabs._getTabManagerUtil().saveHistoryItem)}),test("init() has default tabParam",function(){this.prepareTabManagerUtilStub(),this.initializeTabManager(),equal(this.utilMock.args[0][1],"filterView")}),test("init() attempts to add tab parameter to the query string and overwrite current history item",function(){this.prepareTabManagerUtilStub(),this.initializeTabManager(),sinon.assert.calledOnce(this.tabManager.navigationTabs._getTabManagerUtil().updateInitialUrl),sinon.assert.calledOnce(this.tabManager.navigationTabs._getTabManagerUtil().replaceHistoryItem)})});