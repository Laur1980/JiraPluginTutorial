AJS.test.require("jira.webresources:browseprojects",function(){require(["jira/project/browse/projectcollection","jira/project/browse/projecttypesservice"],function(t,e){"use strict";module("jira/project/browse/projectmodel",{setup:function(){this.firstCat={get:sinon.stub().withArgs("name").returns("first category")},this.secondCat={get:sinon.stub().withArgs("name").returns("second category")};var e=sinon.stub();e.withArgs("first").returns(this.firstCat),e.withArgs("second").returns(this.secondCat),this.catCollection={get:e},this.projects=[{id:"proj1",projectCategoryId:"first"},{id:"proj2",projectCategoryId:"second"},{id:"proj3",projectCategoryId:"third"},{id:"proj4"}],this.collection=new t(this.projects,{categories:this.catCollection,mode:"client"})},assertProjectCategoryIsCorrect:function(t,e,o){var r=this.collection.get(t);ok(r);var s=r.toJSON();equal(s.projectCategoryId,e),equal(s.projectCategoryName,o)}}),test("should provide category name for known categories",function(){this.assertProjectCategoryIsCorrect("proj1","first","first category"),this.assertProjectCategoryIsCorrect("proj2","second","second category")}),test("should not include unknown categories",function(){this.assertProjectCategoryIsCorrect("proj3","third",void 0),this.assertProjectCategoryIsCorrect("proj4",void 0,void 0)}),test("should not include category when out of collection",function(){var t=new this.collection.model({id:"project",projectCategoryId:"first"}).toJSON();equal(t.projectCategoryId,"first"),equal(t.projectCategoryName,void 0)}),test("should add the project type icon to the model",function(){e.init({business:{icon:"business-icon"}});var t=new this.collection.model({projectTypeKey:"business"}).toJSON();equal(t.projectTypeIcon,"business-icon")})})});