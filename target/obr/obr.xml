<repository lastmodified='20180107075551.605'>
  <resource id='ro.etss.jira.plugin.tutorial.JiraPluginTutorial/1.0.0' symbolicname='ro.etss.jira.plugin.tutorial.JiraPluginTutorial' presentationname='JiraPluginTutorial' uri='JiraPluginTutorial-1.0.jar' version='1.0.0'>
    <description>This is the ro.etss.jira.plugin.tutorial:JiraPluginTutorial plugin for Atlassian JIRA.</description>
    <size>300781</size>
    <documentation>http://www.euro-testing.com/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='ro.etss.jira.plugin.tutorial.JiraPluginTutorial'/>
      <p n='presentationname' v='JiraPluginTutorial'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ro.etss.jira.plugin.tutorial.main.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.bc.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.bc.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.component))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.component</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.config))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.config</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.exception))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.exception</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.comparator))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.comparator</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.impl))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.impl</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.manager))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.manager</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.persistence))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.persistence</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields.layout.field))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields.layout.field</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.issuetype))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.issuetype</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.status))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.status</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.workflow))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.plugin.workflow</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.project))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.project</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security.roles))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security.roles</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.util.collect))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.util.collect</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.workflow))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.workflow</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.workflow.condition))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.workflow.condition</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.workflow.function.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.workflow.function.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api</require>
    <require name='package' filter='(&amp;(package=com.google.common.base))' extend='false' multiple='false' optional='false'>Import package com.google.common.base</require>
    <require name='package' filter='(&amp;(package=com.google.common.collect))' extend='false' multiple='false' optional='false'>Import package com.google.common.collect</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.module.propertyset))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.module.propertyset</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.workflow))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.workflow</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.workflow.loader))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.workflow.loader</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.inject))' extend='false' multiple='false' optional='false'>Import package javax.inject</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='false'>Import package org.slf4j</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.parsing</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.io))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.io</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='false'>Import package org.springframework.util</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=ro.etss.jira.plugin.tutorial.main.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package ro.etss.jira.plugin.tutorial.main.api;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=webwork.action))' extend='false' multiple='false' optional='false'>Import package webwork.action</require>
  </resource>
</repository>