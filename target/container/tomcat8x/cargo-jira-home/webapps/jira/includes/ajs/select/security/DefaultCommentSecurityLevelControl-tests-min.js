AJS.test.require(["jira.webresources:default-comment-security-level"],function(){"use strict";var e=require("jira/ajs/select/security/default-comment-security-level-control"),t=require("jquery"),l=sinon.assert;module("SaveDefaultLevelControl",{setup:function(){var l=t('<span class="default-comment-level" data-project-id="123456"></span>'),a=t('<span class="security-level-inline-error"></span>'),s={selectUnavailble:function(){}},o=new e(l,a,s);this.$containerSpan=t('<span class="default-comment-level-container"/>'),this.defaultModelMock={updateDefault:function(){}};var n={level:"foo",levelName:"bar"};this.saveControl=new o._SaveDefaultLevelControl(this.$containerSpan,this.defaultModelMock,n)}}),test("check if _putStatusSpan is setting correct content",function(){this.saveControl._putStatusSpan({text:"this is text",status:"this is status",fade:!1,icon_classes:"those are icon classes",text_classes:"those are text classes"});var e=this.$containerSpan.find(".default-comment-level-status");equal(e.attr("status"),"this is status",'status should be set to "this is status"');var t=this.$containerSpan.find(".default-comment-level-status-icon");ok(t.hasClass("those")&&t.hasClass("are")&&t.hasClass("icon")&&t.hasClass("classes"),"icon should have specified classes");var l=this.$containerSpan.find(".default-comment-level-status-text");ok(l.hasClass("those")&&l.hasClass("are")&&l.hasClass("text")&&l.hasClass("classes"),"text should have specified classes"),equal(l.text(),"this is text",'text should be set to "this is text"')}),test("check if _putLinkToSetDefault creates only one link",function(){this.saveControl._sendDefaultChangedAnalytics=function(){},this.defaultModelMock.updateDefault=this.sandbox.spy();var e=this.$containerSpan.find(".default-comment-level-switch");equal(e.length,1,"there should be exactly 1 link to set default")}),test("check if link created by _putLinkToSetDefault() is calling updateDefault() when clicked",function(){this.saveControl._sendDefaultChangedAnalytics=function(){},this.defaultModelMock.updateDefault=this.sandbox.spy(),this.$containerSpan.find(".default-comment-level-switch").trigger("click"),l.calledOnce(this.defaultModelMock.updateDefault,"updateDefault should be called once");var e=this.defaultModelMock.updateDefault.getCall(0).args[0];ok("foo"===e.level&&"bar"===e.levelName,"updateDefault should be called with proper object")}),module("DefaultCommentSecurityLevelControl",{SecuritySelectAdapterMock:function(){this.hasSecurityLevel=function(){return!1},this.selectUnavailble=function(){},this.selectLevel=function(){},this.getSelectedLevel=function(){return"foo"},this.getSelectedLevelName=function(){return"bar"}},setup:function(){this.sandbox=sinon.sandbox.create(),this.$defaultCommentLevelSpan=t('<span class="default-comment-level" data-project-id="123456"></span>'),this.$errorSpan=t('<span class="security-level-inline-error"></span>'),this.adapterMock=new this.SecuritySelectAdapterMock,this.saveControl=new e(this.$defaultCommentLevelSpan,this.$errorSpan,this.adapterMock),this.saveControl.selectionSpi.selectUnavailble=this.sandbox.spy(),this.saveControl.selectionSpi.selectLevel=this.sandbox.spy()}}),test("check if _applyDefaultToSelection() called with available level sets selection to this level",function(){this.saveControl.selectionSpi.hasSecurityLevel=function(){return!0},this.saveControl.defaultLevelModel.updateDefault=this.sandbox.spy(),this.saveControl._applyDefaultToSelection({level:"foo",levelName:"bar"}),l.calledOnce(this.saveControl.selectionSpi.selectLevel,"selectLevel should be called exactly once"),l.calledWith(this.saveControl.selectionSpi.selectLevel,"foo")}),test("check if _applyDefaultToSelection() called with available, but outdated levelname updates default to have new levelname",function(){this.saveControl.selectionSpi.hasSecurityLevel=function(){return!0},this.saveControl.defaultLevelModel.updateDefault=this.sandbox.spy(),this.saveControl._applyDefaultToSelection({level:"foo",levelName:"outdated bar"}),l.calledOnce(this.saveControl.defaultLevelModel.updateDefault,"updateDefault should be called once");var e=this.saveControl.defaultLevelModel.updateDefault.getCall(0).args[0];ok("foo"===e.level&&"bar"===e.levelName,"updateDefault should be called with proper object")}),test("check if _applyDefaultToSelection() called with not available level makes unavailable selection",function(){this.saveControl.selectionSpi.hasSecurityLevel=function(){return!1},this.saveControl._applyDefaultToSelection({level:"foo",levelName:"bar"}),l.calledOnce(this.saveControl.selectionSpi.selectUnavailble,"unavailable selection should be made")})});