AJS.test.require(["jira.webresources:key-commands"],function(){function e(e){return function(n,a){var r="number"==typeof n?n:o[n]||n.charCodeAt(0);t(a||document).trigger({type:e,keyCode:r,which:r})}}function n(e){var n=0;this.valueOf=function(){return n},t(document).bind(e,function(){n++})}var t=require("jquery");module("Normalised Key Events",{teardown:function(){t(document).unbind("aui:keydown aui:keypress aui:keyup")}});var o={Backspace:8,Tab:9,Return:13,Shift:16,Control:17,Alt:18,Esc:27,Spacebar:32,PageUp:33,PageDown:34,End:35,Home:36,Left:37,Up:38,Right:39,Down:40,Del:46},a=e("keydown"),r=e("keypress"),i=e("keyup");(t.browser.mozilla||t.browser.opera)&&(a=function(e,n){var a=o[e]||e.charCodeAt(0);t(n||document).trigger({type:"keydown",keyCode:a,which:a}),t(n||document).trigger({type:"keypress",keyCode:a,which:0})}),test("Character keys are identified by character",function(){var e;t(document).bind("aui:keypress",function(n){e=n.key}),r("A"),equal(e,"A",'Key code 65 yields event.key == "A" for "aui:keypress" event'),r("a"),equal(e,"a",'Key code 97 yields event.key == "a" for "aui:keypress" event'),r("ß"),equal(e,"ß",'Key code 223 yields event.key == "ß" for "aui:keypress" event')}),test("Non-character keys are identified by name",function(){var e;t(document).bind("aui:keydown aui:keyup",function(n){e=n.key});for(var n in o)a(n),equal(e,n,"Key code "+o[n]+' yields event.key == "'+n+'" for "aui:keydown" event'),i(n),equal(e,n,"Key code "+o[n]+' yields event.key == "'+n+'" for "aui:keyup" event')}),test('"aui:keydown" and "aui:keyup" events do not fire for unrecognised keys',function(){var e=new n("aui:keydown"),t=new n("aui:keyup");a("A"),i("A"),equal(e.valueOf(),0,'"aui:keydown" event is not fired when event.which == 65'),equal(t.valueOf(),0,'"aui:keyup"   event is not fired when event.which == 65')}),test('"aui:keypress" event does not fire for non-character keys',function(){var e=new n("aui:keypress");r("\0"),equal(e.valueOf(),0,'"aui:keypress" event is not fired when event.which == 0')}),t.browser.msie&&test("Modifier keys are not fired repeatedly",function(){var e=new n("aui:keydown");a("Shift"),a("Shift"),equal(e.valueOf(),1,"SHIFT key is only fired once"),a("Control"),a("Control"),equal(e.valueOf(),2,"CTRL key is only fired once"),a("Alt"),a("Alt"),equal(e.valueOf(),3,"ALT key is only fired once")}),test("Default action is prevented with event.preventDefault() on normalised event",function(){var e={keydown:!1,keypress:!1,keyup:!1};t(document).bind("aui:keydown aui:keypress aui:keyup",function(e){e.preventDefault()}),t(document).bind("keydown keypress keyup",function(n){e[n.type]=n.isDefaultPrevented()}),a("Control"),r("z"),i("Control"),equal(e.keydown,!0,'event.preventDefault() of "aui:keydown"  event prevents default action of related "keydown"  event'),equal(e.keypress,!0,'event.preventDefault() of "aui:keypress" event prevents default action of related "keypress" event'),equal(e.keyup,!0,'event.preventDefault() of "aui:keyup"    event prevents default action of related "keyup"    event')})});