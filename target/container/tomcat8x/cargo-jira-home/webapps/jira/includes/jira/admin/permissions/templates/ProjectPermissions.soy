{namespace JIRA.Templates.ProjectPermissions}

/**
* @param name
* @param sharedProjects
* @param? description
*/
{template .permissionScheme}
    <div class="aui-page-header">
        <div class="aui-page-header-inner">
            <div class="aui-page-header-image">
                <div class="aui-avatar aui-avatar-large">
                    <div class="aui-avatar-inner jira-icon48-permissions"></div>
                </div>
            </div>
            <div class="aui-page-header-main">
                <ul class="aui-nav aui-nav-breadcrumbs">
                    <li class="aui-nav-selected">
                        <a href="{contextPath()}/secure/admin/ViewPermissionSchemes.jspa">{getText('admin.permission.project.schemes')}</a>
                    </li>
                </ul>
                <h2 class="project-config-scheme-heading">
                    <span id="project-config-permissions-scheme-name" class="project-config-scheme-name">{$name}</span>
                </h2>
                {call JIRA.Templates.ProjectAdmin.UsedBy.usedBy}
                    {param projects: $sharedProjects /}
                {/call}
            </div>
            <div class="aui-page-header-actions">
                <div class="aui-buttons admin-header-actions-plugin-point">
                </div>
                <div class="aui-buttons">
                    <button class="aui-button js-grant-permission-trigger">{getText('admin.permission.project.grant.permission.button')}</button>
                </div>
            </div>
        </div>
    </div>
    {if $description}
        <p>{$description}</p>
    {/if}
    {call JIRA.Templates.Links.basicHelpLink}
        {param url   : getJiraHelpUrl('project.permissions') /}
        {param desc  : getJiraHelpDesc('project.permissions') /}
        {param title : getJiraHelpTitle('project.permissions') /}
        {param isLocal : false /}
    {/call}
{/template}

/**
* @param heading
* @param readOnly
* @param warningContent
*/
{template .permissionTable}
    <h4 class="project-permissions-category-header sentence-case">{$heading}</h4>

    {if length($warningContent) > 0}
        {call aui.message.warning}
            {param content}
                <p>{getText('admin.permission.project.invalid.user.warning')}</p>
                {foreach $value in $warningContent}
                    <p>
                        <strong>{$value.permName}: </strong>
                        {foreach $username in $value.content}
                            {if not isFirst($username)}{', '}{/if}
                            {$username.displayValue}
                        {/foreach}
                    </p>
                {/foreach}
            {/param}
        {/call}
    {/if}

    <table class="aui jira-admin-table">
        <thead>
            <tr>
                <th class="project-permissions-header-cell">{getText('admin.permission.project.permission')}</th>
                <th class="security-type-header-cell">{getText('admin.permission.project.granted.to')}</th>
                {if not $readOnly}<th width="10%" class="operations-header-cell"></th>{/if}
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
{/template}

/**
* @param permissionName
* @param permissionDesc
* @param extPermission
* @param readOnly
* @param grants
*/
{template .permissionRow}
    <td data-headers="project-permissions">
        <p class="title">{$permissionName}</p>
        <p class="description"><small>{$permissionDesc}</small></p>
        {if $extPermission}
            {call .extendedPermissionRow}
                {param name        : $extPermission.name /}
                {param description : $extPermission.description /}
                {param checked     : $extPermission.checked /}
                {param readOnly    : $readOnly /}
            {/call}
        {/if}
    </td>
    <td class="grants" data-headers="security-type">
    </td>
    {if not $readOnly}
        <td>
            <div class="operation-triggers">
                <button class="aui-button aui-button-link add-trigger">{getText('admin.permission.project.edit')}</button>
                {if $grants.length > 0}
                    <button class="aui-button aui-button-link delete-trigger">{getText('admin.permission.project.remove')}</button>
                {/if}
            </div>
        </td>
    {/if}
{/template}

/**
* @param name
* @param description
* @param checked
* @param readOnly
*/
{template .extendedPermissionRow}
    <div class="extended-permission">
        <div class="permission {$readOnly ? 'readonly': ''}">
            <label>
                {if not $readOnly}
                    <input class="checkbox toggle" type="checkbox"
                    {if $checked} checked="checked"{/if}
                    >
                {/if}
                {$name}
                {if $readOnly}
                    {sp}<span class="aui-lozenge aui-lozenge-{$checked ? 'success' : 'generic'}">
                        {$checked ? getText('admin.common.words.enabled') : getText('admin.common.words.disabled') }</span>
                {/if}
            </label>
            <p class="description"><small>{$description|noAutoescape}</small></p>
        </div>
    </div>
{/template}

/**
* @param displayName
* @param isSingleValue
* @param? emptyValue
* @param? values
*/
{template .renderGrant}
    <dt class="sentence-case {if $isSingleValue}single-value{/if}">{$displayName}</dt>
    {if not $isSingleValue}
        {foreach $value in $values}
            <dd {if ($value.valid != null) and (not $value.valid)}class="invalid-user"{/if}>{if $value.displayValue}{$value.displayValue}{elseif $emptyValue}{$emptyValue}{/if}</dd>
        {/foreach}
    {/if}
{/template}

/**
* @param permissionName
*/
{template .deleteDialog}
<section role="dialog" id="delete-permission-dialog" class="aui-layer aui-dialog2 aui-dialog2-medium" aria-hidden="true">
    <header class="aui-dialog2-header">
        <h2 class="aui-dialog2-header-main">{getText('admin.permission.project.remove.singular')}</h2>
        <a class="aui-dialog2-header-close">
            <span class="aui-icon aui-icon-small aui-iconfont-close-dialog">{getText('common.words.close')}</span>
        </a>
    </header>
    <div class="aui-dialog2-content">
        <form class="aui" action="#" id="grant-permission-form">
            <fieldset class="group">
                <legend><span>{getText('admin.permission.project.permission')}</span></legend>
                <p class="grant-permission-name"><strong>{$permissionName}</strong></p>
            </fieldset>
            <fieldset class="group grants">
                <legend><span>{getText('admin.permission.project.remove.from')}</span></legend>
            </fieldset>
        </form>
    </div>
    <footer class="aui-dialog2-footer">
        <div class="aui-dialog2-footer-actions">
            <button id="dialog-save-button" class="aui-button aui-button-primary">{getText('common.words.remove')}</button>
            <button id="dialog-close-button" class="aui-button aui-button-link">{getText('common.words.cancel')}</button>
        </div>
    </footer>
</section>
{/template}

/**
* @param displayName
* @param values
* @param? emptyDisplayName
*/
{template .deleteGrant}
    {foreach $value in $values}
        <div class="checkbox">
            <input class="checkbox js-delete-grant" type="checkbox" name="deleteGrant" id="delete-grant-{$value.id}" value="{$value.id}">

            {let $isGhostUser: ($value.valid != null) and (not $value.valid)/}
            {if $isGhostUser}
                {call .inlineDialog/}
            {/if}

            <label for="delete-grant-{$value.id}" ><strong>{$displayName}</strong>
                <span
                    {if $isGhostUser} class="invalid-user"{/if}>
                    {if $value.displayValue} - {$value.displayValue}
                    {elseif $emptyDisplayName} - {$emptyDisplayName}
                    {/if}
                </span>
            </label>
        </div>
    {/foreach}
{/template}

/**
* Inline dialog to display a warning about ghost users (users deleted from user management, but with permissions assigned)
*/
{template .inlineDialog}
    {let $randomId: randomInt(10000) /}
    <a href="#" class="aui-icon aui-icon-warning invalid-user-warning-icon" aria-controls="inline-dialog2-deleted-user-{$randomId}" data-aui-trigger/>
    {call aui.inlineDialog2.inlineDialog2}
        {param id}inline-dialog2-deleted-user-{$randomId}{/param}
        {param alignment: 'bottom center' /}
        {param respondsTo: 'hover' /}
        {param extraClasses: 'invalid-user-warning-dialog' /}
        {param content}
            {getText('admin.permission.project.remove.invalid.user.dialog.warning')}
        {/param}
    {/call}
{/template}

/**
 * @param messages list of messages to render
*/
{template .renderMessageList}
    {if length($messages) > 0}
        <ul>
            {foreach $message in $messages}
                <li>{$message}</li>
            {/foreach}
        </ul>
    {/if}
{/template}

/**
 */
{template .optOutFeedbackFlag}
<p>{getText('admin.permissions.extendedadmin.feedback.flag.message')}</p>
<p><a class='extended-admin-optout-link' href='#'>{getText('admin.permissions.extendedadmin.feedback.flag.feedback.link')}</a></p>
{/template}

/**
 * Generates a description of extended project administration permission.
 */
{template .renderExtendedProjectAdminDescription}
    {let $linkStart}
        {call JIRA.Templates.Links.helpLink}
            {param url : getJiraHelpUrl('extended.project.permissions') /}
            {param title : getJiraHelpTitle('extended.project.permissions') /}
            {param isLocal : false /}
            {param onlyOpeningTag : true /}
        {/call}
    {/let}
    {getText('admin.permissions.descriptions.EXT_PROJECT_ADMIN', $linkStart, '</a>')|noAutoescape}
{/template}
