AJS.test.require(["jira.webresources:edit-project-details"],function(){function e(){var e=a("#aui-flag-container").find(".aui-flag");return e&&"false"===e.attr("aria-hidden")}function i(){a("#aui-flag-container").find(".aui-flag a.cancel").click()}function t(){a("#aui-flag-container").find(".aui-icon.icon-close").click()}function n(){return'<div><input class="text" type="text" name="key" id="project-edit-key" value="'+o+'" maxlength="10"><input type="hidden" id="edit-project-original-key" name="originalKey" value="'+o+'"><input type="hidden" id="edit-project-key-edited" name="keyEdited" value="false"></div>'}var a=require("jquery"),l=(require("underscore"),require("jira/project/project-edit-key")),o="HSP5";module("JIRA.Project.ProjectEditKey",{setup:function(){this.$field=a(n()),a("#qunit-fixture").append(this.$field),this.createUnitUnderTest=function(){return new l(this.$field,{flagShowDelay:0})}},teardown:function(){a("#aui-flag-container").remove(),a("#projectTypeKey-suggestions").parent().remove()}});test("Initialise with different key, will show warning flag",function(){this.$field.find("#edit-project-original-key").val("HSP");this.createUnitUnderTest();ok(e(),"When having different project-key values during initialisation, shall show the warning flag")}),test("Initialise with original key, does not show any flags",function(){this.createUnitUnderTest();ok(!e(),"No flag when the project-key value is the original one")}),test("Change the key in the dialogue will pop the flag",function(){var i=this.createUnitUnderTest();this.$field.find("#project-edit-key").val("lll"),i.checkModified(),ok(e(),"Flag showing after changing the project key"),equal(this.$field.find("#edit-project-key-edited").val(),"true","mark the project-key as edited")}),test("Change the key to its original value will remove the flag ",function(){var i=this.createUnitUnderTest();this.$field.find("#project-edit-key").val("lll"),i.checkModified(),ok(e(),"Flag showing after changing the project key"),this.$field.find("#project-edit-key").val(o),i.checkModified(),ok(!e(),"No flag when the project-key value is the original one"),equal(this.$field.find("#edit-project-key-edited").val(),"false","mark the project-key as edited")}),test("Closing the flag will not show up again even when matching the original key",function(){var i=this.createUnitUnderTest();this.$field.find("#project-edit-key").val("lll"),i.checkModified(),ok(e(),"Flag showing after changing the project key"),t(),this.$field.find("#project-edit-key").val("ORIGINAL_KEY"),i.checkModified(),ok(!e(),"No flag when the project-key value is the original one"),this.$field.find("#project-edit-key").val("HS"),i.checkModified(),ok(!e(),"No flag when it has been dismissed by user")}),test("Change the key in the dialogue will pop the flag",function(){var t=this.createUnitUnderTest();this.$field.find("#project-edit-key").val("lll"),t.checkModified(),ok(e(),"Flag showing after changing the project key"),equal(this.$field.find("#edit-project-key-edited").val(),"true","mark the project-key as edited"),i(),t.checkModified(),equal(this.$field.find("#edit-project-key-edited").val(),"false","now the project-key is not marked as modified after flag-reset-value"),equal(this.$field.find("#project-edit-key").val(),o,"the project key has the original value after flag-reset-value"),ok(!e(),"No flag when the project-key value is the original one")})});