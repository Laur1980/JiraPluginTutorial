AJS.test.require("jira.webresources:projectpermissions",function(){function e(e){var s=new l({id:12345});return s.fetch(),e.requests[0].respond(200,{"Content-Type":"application/json"},JSON.stringify({name:"test scheme",description:"test scheme",displayRendering:{readOnly:!1,grouping:[h,g]},permissions:[p,u,m]})),s}function s(){return this.context=AJS.test.mockableModuleContext(),this.mockMetrics={start:sinon.spy(),end:sinon.spy()},this.mockOpen=sinon.spy(),this.mockAddPermissionView=Backbone.View.extend({open:this.mockOpen,render:d.noop}),this.mockDeletePermissionView=Backbone.View.extend({open:this.mockOpen,render:d.noop}),this.context.mock("internal/browser-metrics",this.mockMetrics),this.context.mock("jira/project/permissions/addpermissionview",this.mockAddPermissionView),this.context.mock("jira/project/permissions/deletepermissionview",this.mockDeletePermissionView),this.context.require("jira/project/permissions/permissionschemeview")}function i(e){var s=c("#aui-flag-container .aui-flag[aria-hidden=false] .title:contains("+e+")");return strictEqual(s.size(),1,'a flag with title "'+e+'" was expected'),s.parent()}function t(e,s){o(i(e),s)}function r(e){var s=c("#aui-flag-container .aui-flag[aria-hidden=false] .aui-message").contents().filter(function(){return 3===this.nodeType&&-1!==this.nodeValue.indexOf(e)});return strictEqual(s.size(),1,'a flag with body text "'+e+'" was expected'),s.parents(".aui-message")}function n(e,s){o(r(e),s)}function o(e,s){strictEqual(e.is(".aui-message-"+s),!0,"expected flag have class aui-message-"+s)}function a(){return c("#aui-flag-container .aui-flag[aria-hidden=false]")}var c=require("jquery"),d=require("underscore"),l=require("jira/project/permissions/permissionschememodel"),p={permissionKey:"ADD_COMMENTS",permissionName:"Add comments",permissionDesc:"Adding comments",grants:[{displayName:"Application Role",securityType:"applicationRole",values:[{id:1,displayValue:"Administrators"}]}]},u={permissionKey:"REMOVE_COMMENTS",permissionName:"Remove comments",permissionDesc:"Removing comments",grants:[{displayName:"Application Role",securityType:"applicationRole",values:[{id:2}]}]},m={permissionKey:"CREATE_PROJECTS",permissionName:"Create projects",permissionDesc:"Creating projects",grants:[{displayName:"Application Role",securityType:"applicationRole",values:[{id:1}]}]},h={heading:"Issue Permissions",sectionType:"issue",permissions:[p.permissionKey,u.permissionKey]},g={heading:"Project Permissions",sectionType:"project",permissions:[m.permissionKey]};module("Dialog rendering",{setup:function(){var i=s.call(this);this.sandbox=sinon.sandbox.create({useFakeServer:!0}),this.schemeModel=e(this.sandbox.server),this.view=new i({el:c("#qunit-fixture"),model:this.schemeModel}),this.view.render()},teardown:function(){this.sandbox.restore()}}),test("Ensure all permission groups are rendered correctly",function(){var e=this.view.$el.find(".permissions-group");strictEqual(e.length,2,"Should have two permission groups"),strictEqual(AJS.$(".project-permissions-category-header",e[0]).text(),h.heading,"First permission group should be issue permissions"),strictEqual(AJS.$(".project-permissions-category-header",e[1]).text(),g.heading,"Second permission group should be project permissions")}),test("Ensure permission group content is rendered correctly",function(){var e=this.view.$el.find(".permissions-group").first(),s=AJS.$(".jira-admin-table tbody tr",e),i=s.length;strictEqual(i,h.permissions.length,"Should have the correct number of permissions in group");var t=s.first();strictEqual(t.find(".title").text(),p.permissionName,"Should have rendered permission title"),strictEqual(t.find(".description").text(),p.permissionDesc,"Should have rendered permission description");var r=t.find(".grants dl.types"),n=r.find("dt").length;strictEqual(n,p.grants.length,"Add Comment should have the right number of grants"),strictEqual(r.find("dt").text(),p.grants[0].displayName,"Should have application role title"),strictEqual(r.find("dd").text(),p.grants[0].values[0].displayValue,"Should have the administration application role grant")}),test("Ensure on an add event browser metrics are started and ended",function(){var e=this.view.$el.find(".permissions-group").first().find(".jira-admin-table tbody tr").first();ok(!this.mockOpen.called,"Should not have called the open function yet"),ok(!this.mockMetrics.start.called,"Should not have started metrics yet"),ok(!this.mockMetrics.end.called,"Should not have ended metrics, considering it hasn't started"),e.find(".add-trigger").click(),ok(this.mockOpen.called,"Should have called the open function"),ok(this.mockMetrics.start.called,"Start of metrics should have been begun"),ok(!this.mockMetrics.end.called,"End of metrics should not have been called until rendered"),this.view._addView.trigger("contentLoaded"),ok(this.mockMetrics.end.called,"End of metrics should now have been called")}),test("Ensure on delete event browser metrics are started and ended",function(){var e=this.view.$el.find(".permissions-group").first().find(".jira-admin-table tbody tr").first();ok(!this.mockOpen.called,"Should not have called the open function yet"),ok(!this.mockMetrics.start.called,"Should not have started metrics yet"),ok(!this.mockMetrics.end.called,"Should not have ended metrics, considering it hasn't started"),e.find(".delete-trigger").click(),ok(this.mockOpen.called,"Should have called the open function"),ok(this.mockMetrics.start.called,"Start of metrics should have been begun"),ok(!this.mockMetrics.end.called,"End of metrics should not have been called until rendered"),this.view._deleteView.trigger("contentLoaded"),ok(this.mockMetrics.end.called,"End of metrics should now have been called")});var f;module("Rendering feedback messages",{setup:function(){this.sandbox=sinon.sandbox.create({useFakeServer:!0});var i=s.call(this),t=e(this.sandbox.server);f=new i({model:t})},teardown:function(){c(".aui-flag .icon-close").click(),this.sandbox.restore()}}),test("null server response renders generic error message",function(){f.displayOperationFailureMessage(),t("admin.permissions.feedback.unspecifiederror.title","warning"),r("admin.permissions.feedback.unspecifiederror.description")}),test("server response with empty errorMessages renders generic error message",function(){f.displayOperationFailureMessage({errorMessages:[]}),t("admin.permissions.feedback.unspecifiederror.title","warning"),r("admin.permissions.feedback.unspecifiederror.description")}),test("server response with a single item in errorMessages collection renders correct message",function(){f.displayOperationFailureMessage({errorMessages:["only a single error somewhere"]}),t("admin.permissions.feedback.feedbackerror.title.single","warning")}),test("server response with multiple items in errorMessages collection renders correct message",function(){f.displayOperationFailureMessage({errorMessages:["error #1","error #2"]}),t("admin.permissions.feedback.feedbackerror.title.multiple","warning"),r("admin.permissions.feedback.feedbackerror.desc")}),test("server response without unknown result type renders no message",function(){f.displayOperationSuccessMessage({operationResult:{type:"invalid-type"}}),strictEqual(a().size(),0,"no flags should be visible")}),test("server response with success result type renders success message",function(){f.displayOperationSuccessMessage({operationResult:{type:"success",messages:["This should be a success message!"]}}),n("This should be a success message!","success")}),test("server response with info result type renders info message",function(){f.displayOperationSuccessMessage({operationResult:{type:"info",messages:["This should be an info message!"]}}),n("This should be an info message!","info")}),test("server response with multiple messages should render only the first one",function(){var e="This is the expected message to be rendered";f.displayOperationSuccessMessage({operationResult:{type:"success",messages:[e,"This message should not be rendered in the Project Permissions page"]}}),n(e,"success")})});